(add-to-list 'load-path "~/.emacs.d/elisp/cedet-1.0pre7/common")
(add-to-list 'load-path "~/.emacs.d/elisp/cedet-1.0pre7/semantic")
(add-to-list 'load-path "~/.emacs.d/elisp/cedet-1.0pre7/eieio")
(add-to-list 'load-path "~/.emacs.d/elisp/ecb-2.40/")
(add-to-list 'load-path "~/.emacs.d/elisp/autoheader")
(add-to-list 'load-path "~/.emacs.d/elisp/jdee-2.4.0.1/lisp")
(add-to-list 'load-path "~/.emacs.d/elisp/elib-1.0")
(add-to-list 'load-path "~/.emacs.d/elisp/color-theme-6.6.0")
(add-to-list 'load-path "~/.emacs.d/elisp/tabbar")


(load-file "~/.emacs.d/elisp/userinterface-zy.el")
(load-file "~/.emacs.d/elisp/cedetsetting-zy.el")
(load-file "~/.emacs.d/elisp/mics-zy.el")


(setq shell-file-name "/bin/bash") 

(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
;; '(ecb-layout-name "mine")
 '(ecb-layout-window-sizes nil)
 '(ecb-options-version "2.40")
 '(global-semantic-tag-folding-mode t nil (semantic-util-modes))
 '(inhibit-startup-screen t)
 '(semantic-idle-scheduler-idle-time 3)
 '(semantic-self-insert-show-completion-function (lambda nil (semantic-ia-complete-symbol-menu (point)))))
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "darkslategrey" :foreground "AntiqueWhite" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 98 :width normal :foundry "unknown" :family "DejaVu Sans Mono")))))

;;(require 'linum)
;;(linum-mode t)

;(setq tab-width 4 indent-tabs-mode t)
;(setq indent-tabs-mode t)
(setq indent-tabs-mode t)
(setq tab-width 4)
(setq c-basic-offset 4)
(setq c-set-style "k&r")
;; answer with y or n instead of yes or no
(fset 'yes-or-no-p 'y-or-n-p)

;; Screw up memory usage
(setq gc-cons-threshold 4000000)

;;enable copy and paste content for other app
(setq x-select-enable-clipboard t)
